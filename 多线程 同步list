import threading
import time

plist = []


class myThread1(threading.Thread):
    def __init__(self, threadID, name, counter):
        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name
        self.counter = counter

    def run(self):
        print("开启线程： " + self.name)
        # 获取锁，用于线程同步

        while self.counter:
            time.sleep(1)
            print('+ well append!')
            plist.append('Thread-1: ' + str(time.ctime(time.time())))
            self.counter -= 1


class myThread2(threading.Thread):
    def __init__(self, threadID, name, counter):
        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name
        self.counter = counter

    def run(self):
        print("开启线程： " + self.name)
        # 获取锁，用于线程同步

        while self.counter:
            time.sleep(2)
            self.counter -= 1
            print('- well delete!')
            for x in plist:
                print('delete ' + x)
            if len(plist):
                plist.clear()
            else:
                print('pList is empty!!!!')


threads = []

# 创建新线程
thread1 = myThread1(1, "Thread-1", 3)
thread2 = myThread2(2, "Thread-2", 5)

# 开启新线程
thread1.start()
thread2.start()

# 添加线程到线程列表
threads.append(thread1)
threads.append(thread2)

# 等待所有线程完成
for t in threads:
    t.join()
print("退出主线程")
